{
	"info": {
		"_postman_id": "492e0c5b-2f72-4a63-8efc-cebc0c615c6d",
		"name": "Club",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24737132"
	},
	"item": [
		{
			"name": "Add a club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.globals.set(\"club_id\", data.id);\r",
							"\r",
							"pm.test(\"status code is 201\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": [
				{
					"name": "Add Club",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/clubs",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{   \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}"
				}
			]
		},
		{
			"name": "Add invalid club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 400\", function(){\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": [
				{
					"name": "Add invalid club",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/clubs",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{   \r\n    \"statusCode\": 404,\r\n    \"message\": \"Missing parameters in body\"\r\n}"
				}
			]
		},
		{
			"name": "Get all clubs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of clubs > 0', function(){\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data.length).to.greaterThan(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs"
					]
				}
			},
			"response": [
				{
					"name": "Get all clubs",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/clubs",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\r\n    {\r\n\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\",\r\n    \"socios\": [ \r\n        {\r\n            \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\r\n            \"name\": \"usuario club\",\r\n            \"birthDate\": \"1978/10/10\",\r\n            \"email\": \"usuario@gmail.com\",\r\n            \"clubs\": []\r\n        }\r\n    ]\r\n\r\n   },\r\n\r\n   {\r\n\r\n    \"id\": \"14f05d0e-127fg5-11ed-861d-0242ac120032\",\r\n    \"image\": \"http://imagen.com/image2.jpg\",\r\n    \"foundationDate\": \"1976/11/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\",\r\n    \"socios\": [ \r\n        {\r\n            \"id\": \"14f05d0e-11ed-861d-0242ac120032\",\r\n            \"name\": \"usuario2 club\",\r\n            \"birthDate\": \"1978/11/10\",\r\n            \"email\": \"usuario2@gmail.com\",\r\n            \"clubs\": []\r\n        }\r\n    ]\r\n\r\n   }\r\n]"
				}
			]
		},
		{
			"name": "Get one club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"get one socio\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/{{club_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one club",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/clubs/{{club_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{   \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\",\r\n     \"socios\": []\r\n}"
				}
			]
		},
		{
			"name": "Get one invalid club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"get expected error message\", function(){\r",
							"    var data = pm.response.json()\r",
							"    pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get one invalid club",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{   \r\n    \"statusCode\" : 404,\r\n    \"message\": \"The club with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Update a club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\", function(){\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"2020/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs/{{club_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a club",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/clubs/{{club_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}"
				}
			]
		},
		{
			"name": "Update a invalid club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 404\", function(){\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"get expected error message\", function(){\r",
							"    var data = pm.response.json()\r",
							"    pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Update a invalid club",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"image\": \"http://imagen.com/image.jpg\",\r\n    \"foundationDate\": \"1976/12/10\",\r\n    \"description\": \"ipso lorem acta tff ordo seclorum\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{   \r\n    \"statusCode\" : 404,\r\n    \"message\": \"The club with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Delete a club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 204\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/{{club_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"{{club_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a club",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/clubs/{{club_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete a invalid club",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 404\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"get expected error message\", function(){\r",
							"    var data = pm.response.json()\r",
							"    pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clubs",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete a invalid club",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/clubs/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"clubs",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{   \r\n    \"statusCode\" : 404,\r\n    \"message\": \"The club with the given id was not found\"\r\n}"
				}
			]
		}
	]
}